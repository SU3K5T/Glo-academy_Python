uses school;
var j := 0;
function isValid(x:integer; t:integer):boolean;
begin
  var kk := 0;
  for var g := 2 to trunc(sqrt(x)) do
    if (x mod g = 0) and (x div g).isPrime and (g.IsPrime) and (x div g <> g) and (g <> t) and (x div g <> t) then
      kk += 1;
    if kk > 0 then
      isValid := True
    else 
      isValid := False
end;
begin
  var kol := 0;
  var min := 8989898;
  for var i := 158928 to 345293 do
  begin
    var k := 0;
    for j := 2 to trunc(sqrt(i)) do
      if (i mod j = 0) and (j.isPrime) and (isValid(i div j, j)) then
      begin
        k += 1;
        break
      end;
      if k > 0 then 
      begin
        kol += 1;
        if i < min then
          min := i;
      end;
  end;
  print(kol, min);
end.
